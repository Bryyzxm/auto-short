# Konfigurasi untuk Railway's Nixpacks builder
# Solusi Definitif: Menyediakan SEMUA dependensi sistem (Python & FFMPEG).

# 1. Atur PATH untuk SEMUA fase agar 'python' bisa ditemukan.
[variables]
PATH = "${pkgs.ffmpeg}/bin:/app/bin:$PATH"

[phases.setup]
# 2. Instal SEMUA paket yang dibutuhkan: python, ffmpeg, dan 'which' (untuk debugging).
# Ini berdasarkan dokumentasi di README.md yang menyebutkan kebutuhan ffmpeg.
nixPkgs = ["pkgs.python3", "pkgs.ffmpeg", "pkgs.which"]
# 3. Buat symlink 'python' ke 'python3' agar dapat ditemukan oleh skrip instalasi.
cmds = [
    "mkdir -p /app/bin",
    "ln -s $(which python3) /app/bin/python"
]

[phases.setup]
# 2. Instal SEMUA paket yang dibutuhkan: python, ffmpeg, dan 'which' (untuk debugging).
# Ini berdasarkan dokumentasi di README.md yang menyebutkan kebutuhan ffmpeg.
nixPkgs = ["pkgs.python3", "pkgs.ffmpeg", "pkgs.which"]
# 3. Buat symlink 'python' ke 'python3' agar dapat ditemukan oleh skrip instalasi.
cmds = [
    "mkdir -p /app/bin",
    "ln -s $(which python3) /app/bin/python",
    "echo 'Checking Python availability before npm install...'",
    "which python || echo 'Python not found in PATH!'",
    "python --version || echo 'Python version check failed!'",
    "npm install --prefix api"
]

[phases.install]
# 4. Kosongkan fase install karena npm install sudah dilakukan di setup.
cmds = []

[phases.build]
# 5. Kosongkan fase build untuk MENCEGAH Railway menjalankan build default yang salah.
cmds = []

[start]
# 6. Jalankan aplikasi. PATH sudah diatur secara global.
cmd = "npm start --prefix api"
